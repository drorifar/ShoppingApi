// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping.Context;

#nullable disable

namespace Shopping.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20240617075204_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Shopping.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Description",
                            Name = "Name"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Description 2",
                            Name = "Name 2"
                        });
                });

            modelBuilder.Entity("Shopping.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            Description = "10 boxes x 20 bags",
                            Name = "Chai",
                            Price = 10f
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            Description = "24 - 12 oz bottles",
                            Name = "Chang",
                            Price = 20f
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 1,
                            Description = "12 - 355 ml cans",
                            Name = "Guaraná Fantástica",
                            Price = 30f
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 2,
                            Description = "24 - 12 oz bottles",
                            Name = "Sasquatch Ale",
                            Price = 40f
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 2,
                            Description = "24 - 12 oz bottles",
                            Name = "Steeleye Stout",
                            Price = 50f
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 1,
                            Description = "10 boxes x 20 bags",
                            Name = "Chai2",
                            Price = 10f
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 1,
                            Description = "24 - 12 oz bottles",
                            Name = "Chang2",
                            Price = 20f
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 1,
                            Description = "12 - 355 ml cans",
                            Name = "Guaraná Fantástica2",
                            Price = 30f
                        },
                        new
                        {
                            ID = 9,
                            CategoryID = 2,
                            Description = "24 - 12 oz bottles",
                            Name = "Sasquatch Ale2",
                            Price = 40f
                        },
                        new
                        {
                            ID = 10,
                            CategoryID = 2,
                            Description = "24 - 12 oz bottles",
                            Name = "Steeleye Stout2",
                            Price = 50f
                        });
                });

            modelBuilder.Entity("Shopping.Entities.Product", b =>
                {
                    b.HasOne("Shopping.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shopping.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
